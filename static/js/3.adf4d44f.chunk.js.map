{"version":3,"sources":["components/Form/Form.module.css","components/container.module.css","components/ContactList/ContactList.module.css","components/Filter/Filter.module.css","redux/phonebook/phonebook-operation.js","redux/phonebook/contacts-selectors.js","components/Form/Form.js","components/ContactList/ContactList.js","components/Filter/Filter.js","components/views/PhonebookView/Phonebook.js"],"names":["module","exports","axios","defaults","baseURL","getPhonebookFilter","state","phonebook","filter","getLoading","loading","getAllContacts","contacts","getVisibleContacts","createSelector","normalizedFilter","toLowerCase","contact","name","includes","Form","number","handleChange","e","currentTarget","value","setState","handleSubmit","preventDefault","props","map","alert","onSubmit","reset","this","className","styles","addForm","type","pattern","title","required","onChange","Component","connect","dispatch","addContactRequest","post","then","data","addContactSuccess","catch","error","addContactError","message","addContact","onDeleteContact","id","deleteContactRequest","delete","deleteContactSuccess","deleteContactError","deleteContact","ContactList","ContactsList__btn","onClick","changeFilter","target","label","input","PhonebookView","fetchContacts","container","isLoadingContacts","fetchContactsRequest","get","fetchContactsSuccess","fetchContactsError"],"mappings":"kIACAA,EAAOC,QAAU,CAAC,QAAU,wB,mBCA5BD,EAAOC,QAAU,CAAC,UAAY,+B,mBCA9BD,EAAOC,QAAU,CAAC,YAAc,iCAAiC,kBAAoB,yC,mBCArFD,EAAOC,QAAU,CAAC,MAAQ,sBAAsB,MAAQ,wB,0LCYxDC,IAAMC,SAASC,QAAU,wCAElB,I,QCbMC,EAAqB,SAACC,GAAD,OAAWA,EAAMC,UAAUC,QAEhDC,EAAa,SAACH,GAAD,OAAWA,EAAMC,UAAUG,SAExCC,EAAiB,SAACL,GAAD,OAAWA,EAAMC,UAAUK,UAC5CC,EAAqBC,YAChC,CAACH,EAAgBN,IACjB,SAACO,EAAUJ,GACT,IAAMO,EAAmBP,EAAOQ,cAChC,OAAOJ,EAASJ,QAAO,SAACS,GAAD,OACrBA,EAAQC,KAAKF,cAAcG,SAASJ,S,OCLpCK,E,4MACJd,MAAQ,CACNY,KAAM,GACNG,OAAQ,I,EAEVC,aAAe,SAACC,GACd,MAAwBA,EAAEC,cAAlBN,EAAR,EAAQA,KAAMO,EAAd,EAAcA,MACd,EAAKC,SAAL,eAAiBR,EAAOO,K,EAE1BE,aAAe,SAACJ,GACdA,EAAEK,iBACF,IAAQV,EAAS,EAAKZ,MAAdY,KACM,EAAKW,MAAMjB,SAASkB,KAAI,SAACb,GAAD,OAAaA,EAAQC,QACrDC,SAASD,GACXa,MAAM,GAAD,OAAIb,EAAJ,4BACL,EAAKW,MAAMG,SAAX,eAAyB,EAAK1B,QAElC,EAAK2B,S,EAGPA,MAAQ,WAEN,EAAKP,SAAS,CAAER,KAAM,GAAIG,OAAQ,M,4CAGpC,WACE,MAAyBa,KAAK5B,MAAtBY,EAAR,EAAQA,KAAMG,EAAd,EAAcA,OAEd,OACE,uBAAMc,UAAWC,IAAOC,QAASL,SAAUE,KAAKP,aAAhD,UACE,yCAEE,uBACEW,KAAK,OACLpB,KAAK,OACLqB,QAAQ,yHACRC,MAAM,kcACNf,MAAOP,EACPuB,UAAQ,EACRC,SAAUR,KAAKZ,kBAGnB,2CAEE,uBACEgB,KAAK,MACLI,SAAUR,KAAKZ,aACfG,MAAOJ,EACPH,KAAK,SACLqB,QAAQ,yFACRC,MAAM,giBACNC,UAAQ,OAGZ,wBAAQH,KAAK,SAAb,wB,GAtDWK,aAwEJC,eARS,SAACtC,GAAD,MAAY,CAClCM,SAAUD,EAAeL,OAEA,SAACuC,GAAD,MAAe,CACxCb,SAAU,YAAuB,IAApBd,EAAmB,EAAnBA,KAAMG,EAAa,EAAbA,OACjBwB,EFrDF,SAAC,GAAD,IAAG3B,EAAH,EAAGA,KAAMG,EAAT,EAASA,OAAT,OACA,SAACwB,GACC,IAAM5B,EAAU,CACdC,OACAG,UAGFwB,EAASC,eAET5C,IACG6C,KAAK,YAAa9B,GAClB+B,MAAK,gBAAGC,EAAH,EAAGA,KAAH,OAAcJ,EAASK,YAAkBD,OAC9CE,OAAM,SAACC,GAAD,OAAWP,EAASQ,YAAgBD,EAAME,cEyC1CC,CAAW,CAAErC,OAAMG,gBAGjBuB,CAA6CxB,G,kCCxC7CwB,eANS,SAACtC,GACvB,MAAO,CAAEM,SAAUC,EAAmBP,OAEb,SAACuC,GAAD,MAAe,CACxCW,gBAAiB,SAACC,GAAD,OAAQZ,EHAE,SAACY,GAAD,OAAQ,SAACZ,GACpCA,EAASa,eACTxD,IACGyD,OADH,oBACuBF,IACpBT,MAAK,kBAAMH,EAASe,YAAqBH,OACzCN,OAAM,SAACC,GAAD,OAAWP,EAASgB,YAAmBT,EAAME,cGLpBQ,CAAcL,QAEnCb,EAhCM,SAAC,GAAmC,IAAjChC,EAAgC,EAAhCA,SAAU4C,EAAsB,EAAtBA,gBAChC,OACE,oBAAIrB,UAAWC,IAAO2B,YAAtB,SACGnD,EAASkB,KAAI,gBAAG2B,EAAH,EAAGA,GAAIvC,EAAP,EAAOA,KAAMG,EAAb,EAAaA,OAAb,OACZ,+BACE,8BACGH,EADH,KACWG,KAEX,wBACEiB,KAAK,SACLH,UAAWC,IAAO4B,kBAClBC,QAAS,kBAAMT,EAAgBC,IAHjC,sBAJOA,W,iBCkBFb,eANS,SAACtC,GAAD,MAAY,CAClCmB,MAAOpB,EAAmBC,OAED,SAACuC,GAAD,MAAe,CACxCH,SAAU,SAACnB,GAAD,OAAOsB,EAASqB,YAAa3C,EAAE4C,OAAO1C,YAEnCmB,EAtBA,SAAC,GAAD,IAAGnB,EAAH,EAAGA,MAAOiB,EAAV,EAAUA,SAAV,OACb,wBAAOP,UAAWC,IAAOgC,MAAzB,kCAEE,uBACEjC,UAAWC,IAAOiC,MAClB/B,KAAK,OACLb,MAAOA,EACPiB,SAAUA,UCHV4B,E,uKACJ,WACEpC,KAAKL,MAAM0C,kB,oBAGb,WAEE,OACE,0BAASpC,UAAWC,IAAOoC,UAA3B,UACE,2CACCtC,KAAKL,MAAM4C,mBAAqB,gDACjC,cAAC,EAAD,IACA,8CACA,cAAC,EAAD,IACA,cAAC,EAAD,W,GAdoB9B,aA0BbC,eANS,SAACtC,GAAD,MAAY,CAClCmE,kBAAmBhE,EAAWH,OAEL,SAACuC,GAAD,MAAe,CACxC0B,cAAe,kBAAM1B,GLpBY,SAACA,GAClCA,EAAS6B,eACTxE,IACGyE,IAAI,aACJ3B,MAAK,gBAAGC,EAAH,EAAGA,KAAH,OAAcJ,EAAS+B,YAAqB3B,OACjDE,OAAM,SAACC,GAAD,OAAWP,EAASgC,YAAmBzB,EAAME,oBKiBzCV,CAA6C0B","file":"static/js/3.adf4d44f.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"addForm\":\"Form_addForm__P43ok\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"container_container__2ysmu\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ContactList\":\"ContactList_ContactList__2qDKl\",\"ContactsList__btn\":\"ContactList_ContactsList__btn__1AdFu\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"label\":\"Filter_label__xn8FV\",\"input\":\"Filter_input__1vTi8\"};","import axios from \"axios\";\r\nimport {\r\n  addContactRequest,\r\n  addContactSuccess,\r\n  addContactError,\r\n  deleteContactRequest,\r\n  deleteContactSuccess,\r\n  deleteContactError,\r\n  fetchContactsRequest,\r\n  fetchContactsSuccess,\r\n  fetchContactsError,\r\n} from \"./phonebook-actions\";\r\n\r\naxios.defaults.baseURL = \"https://connections-api.herokuapp.com\";\r\n\r\nexport const fetchContacts = () => (dispatch) => {\r\n  dispatch(fetchContactsRequest());\r\n  axios\r\n    .get(\"/contacts\")\r\n    .then(({ data }) => dispatch(fetchContactsSuccess(data)))\r\n    .catch((error) => dispatch(fetchContactsError(error.message)));\r\n};\r\nexport const addContact =\r\n  ({ name, number }) =>\r\n  (dispatch) => {\r\n    const contact = {\r\n      name,\r\n      number,\r\n    };\r\n\r\n    dispatch(addContactRequest());\r\n\r\n    axios\r\n      .post(\"/contacts\", contact)\r\n      .then(({ data }) => dispatch(addContactSuccess(data)))\r\n      .catch((error) => dispatch(addContactError(error.message)));\r\n  };\r\nexport const deleteContact = (id) => (dispatch) => {\r\n  dispatch(deleteContactRequest());\r\n  axios\r\n    .delete(`/contacts/${id}`)\r\n    .then(() => dispatch(deleteContactSuccess(id)))\r\n    .catch((error) => dispatch(deleteContactError(error.message)));\r\n};\r\n// eslint-disable-next-line import/no-anonymous-default-export\r\n// export default { addContact };\r\n","import { createSelector } from \"@reduxjs/toolkit\";\r\n\r\nexport const getPhonebookFilter = (state) => state.phonebook.filter;\r\n\r\nexport const getLoading = (state) => state.phonebook.loading;\r\n\r\nexport const getAllContacts = (state) => state.phonebook.contacts;\r\nexport const getVisibleContacts = createSelector(\r\n  [getAllContacts, getPhonebookFilter],\r\n  (contacts, filter) => {\r\n    const normalizedFilter = filter.toLowerCase();\r\n    return contacts.filter((contact) =>\r\n      contact.name.toLowerCase().includes(normalizedFilter)\r\n    );\r\n  }\r\n);\r\n","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport styles from \"./Form.module.css\";\r\nimport PropTypes from \"prop-types\";\r\nimport { addContact } from \"../../redux/phonebook/phonebook-operation\";\r\nimport { getAllContacts } from \"../../redux/phonebook/contacts-selectors\";\r\n\r\nclass Form extends Component {\r\n  state = {\r\n    name: \"\",\r\n    number: \"\",\r\n  };\r\n  handleChange = (e) => {\r\n    const { name, value } = e.currentTarget;\r\n    this.setState({ [name]: value });\r\n  };\r\n  handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    const { name } = this.state;\r\n    const names = this.props.contacts.map((contact) => contact.name);\r\n    names.includes(name)\r\n      ? alert(`${name}  is alredy in contacts`)\r\n      : this.props.onSubmit({ ...this.state });\r\n\r\n    this.reset();\r\n  };\r\n\r\n  reset = () => {\r\n    // console.log(\"reset is working\");\r\n    this.setState({ name: \"\", number: \"\" });\r\n  };\r\n\r\n  render() {\r\n    const { name, number } = this.state;\r\n    // console.log(store.getState());\r\n    return (\r\n      <form className={styles.addForm} onSubmit={this.handleSubmit}>\r\n        <label>\r\n          Name\r\n          <input\r\n            type=\"text\"\r\n            name=\"name\"\r\n            pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n            title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\r\n            value={name}\r\n            required\r\n            onChange={this.handleChange}\r\n          />\r\n        </label>\r\n        <label>\r\n          Number\r\n          <input\r\n            type=\"tel\"\r\n            onChange={this.handleChange}\r\n            value={number}\r\n            name=\"number\"\r\n            pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\r\n            title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\r\n            required\r\n          />\r\n        </label>\r\n        <button type=\"submit\">Add</button>\r\n      </form>\r\n    );\r\n  }\r\n}\r\n\r\nForm.propTypes = {\r\n  name: PropTypes.string,\r\n  number: PropTypes.string,\r\n};\r\nconst mapStateToProps = (state) => ({\r\n  contacts: getAllContacts(state),\r\n});\r\nconst mapDispatchToProps = (dispatch) => ({\r\n  onSubmit: ({ name, number }) => {\r\n    dispatch(addContact({ name, number }));\r\n  },\r\n});\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Form);\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport styles from \"./ContactList.module.css\";\r\nimport { connect } from \"react-redux\";\r\nimport { deleteContact } from \"../../redux/phonebook/phonebook-operation\";\r\nimport { getVisibleContacts } from \"../../redux/phonebook/contacts-selectors\";\r\n\r\nconst ContactsList = ({ contacts, onDeleteContact }) => {\r\n  return (\r\n    <ul className={styles.ContactList}>\r\n      {contacts.map(({ id, name, number }) => (\r\n        <li key={id}>\r\n          <p>\r\n            {name}: {number}\r\n          </p>\r\n          <button\r\n            type=\"button\"\r\n            className={styles.ContactsList__btn}\r\n            onClick={() => onDeleteContact(id)}\r\n          >\r\n            Delete\r\n          </button>\r\n        </li>\r\n      ))}\r\n    </ul>\r\n  );\r\n};\r\n\r\nContactsList.propTypes = {\r\n  contacts: PropTypes.array.isRequired,\r\n  onDeleteContact: PropTypes.func,\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n  return { contacts: getVisibleContacts(state) };\r\n};\r\nconst mapDispatchToProps = (dispatch) => ({\r\n  onDeleteContact: (id) => dispatch(deleteContact(id)),\r\n});\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ContactsList);\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport styles from \"./Filter.module.css\";\r\nimport { connect } from \"react-redux\";\r\nimport { changeFilter } from \"../../redux/phonebook/phonebook-actions\";\r\nimport { getPhonebookFilter } from \"../../redux/phonebook/contacts-selectors\";\r\n\r\nconst Filter = ({ value, onChange }) => (\r\n  <label className={styles.label}>\r\n    Find contacts by name\r\n    <input\r\n      className={styles.input}\r\n      type=\"text\"\r\n      value={value}\r\n      onChange={onChange}\r\n    />\r\n  </label>\r\n);\r\n\r\nFilter.propTypes = {\r\n  value: PropTypes.string.isRequired,\r\n  onChange: PropTypes.func.isRequired,\r\n};\r\nconst mapStateToProps = (state) => ({\r\n  value: getPhonebookFilter(state),\r\n});\r\nconst mapDispatchToProps = (dispatch) => ({\r\n  onChange: (e) => dispatch(changeFilter(e.target.value)),\r\n});\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Filter);\r\n","import React, { Component } from \"react\";\r\nimport Form from \"../../Form\";\r\nimport styles from \"../../container.module.css\";\r\nimport ContactsList from \"../../ContactList\";\r\nimport Filter from \"../../Filter\";\r\nimport { connect } from \"react-redux\";\r\nimport { getLoading } from \"../../../redux/phonebook/contacts-selectors\";\r\n// /components/redux/phonebook/contacts-selectors\r\nimport { fetchContacts } from \"../../../redux/phonebook/phonebook-operation\";\r\n// import \"./App.css\";\r\n\r\nclass PhonebookView extends Component {\r\n  componentDidMount() {\r\n    this.props.fetchContacts();\r\n  }\r\n\r\n  render() {\r\n    // console.log(state);\r\n    return (\r\n      <section className={styles.container}>\r\n        <h1>Phonebook</h1>\r\n        {this.props.isLoadingContacts && <h1>Downloading...</h1>}\r\n        <Form />\r\n        <h2>Contact List</h2>\r\n        <Filter />\r\n        <ContactsList />\r\n      </section>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n  isLoadingContacts: getLoading(state),\r\n});\r\nconst mapDispatchToProps = (dispatch) => ({\r\n  fetchContacts: () => dispatch(fetchContacts()),\r\n});\r\nexport default connect(mapStateToProps, mapDispatchToProps)(PhonebookView);\r\n"],"sourceRoot":""}